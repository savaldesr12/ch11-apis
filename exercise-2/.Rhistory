# Create a variable `movie.name` that is the name of a movie of your choice.
movie_name <- "Shawshank Redemption"
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
# load relevant libraries
library(httr)
library(jsonlite)
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
setwd("~/Desktop/Info201/ch11-apis/exercise-2")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
GET(paste0("https://developer.nytimes.com/movie_reviews_v2.json", "/reviews/search.json?api-key=", nyt_apikey), query = movie_name)
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
GET(paste0("https://developer.nytimes.com/movie_reviews_v2.json", "/reviews/search.json/?api-key=", nyt_apikey), query = movie_name)
# Create a variable `movie.name` that is the name of a movie of your choice.
movie.name <- "Shawshank Redemption"
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
GET(paste0("https://developer.nytimes.com/movie_reviews_v2.json", "/reviews/search.json?api-key=", nyt_apikey, movie.name))
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
GET(paste0("https://developer.nytimes.com/movie_reviews_v2/", "reviews/search.json?api-key=", nyt_apikey, movie.name))
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
GET(paste0("https://developer.nytimes.com/movie_reviews_v2/", "reviews/search.json?api-key=", nyt_apikey, "?query=", movie.name))
# Create a variable `movie.name` that is the name of a movie of your choice.
movie_name <- "Shawshank Redemption"
# Construct an HTTP request to search for reviews for the given movie.
# The base URI is `https://api.nytimes.com/svc/movies/v2/`
# The resource is `reviews/search.json`
# See the interactive console for parameter details:
#   https://developer.nytimes.com/movie_reviews_v2.json
# You should use YOUR api key (as the `api-key` parameter)
# and your `movie.name` variable as the search query!
base_uri <- "https://api.nytimes.com/svc/movies/v2/"
resource <- "reviews/search.json"
GET(paste0(base_uri, resource), query = query_params)
query_params<- list("api-key" = nyt_apikey, query = movie_name)
GET(paste0(base_uri, resource), query = query_params)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
body <- fromJSON(content(response, "text"))
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
body <- fromJSON(content(response, "text"))
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
body <- fromJSON(content(response, "Text"))
response <- GET(paste0(base_uri, resource), query = query_params)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
body <- fromJSON(content(response, "text"))
body
